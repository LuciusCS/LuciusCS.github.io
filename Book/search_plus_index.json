{"./":{"url":"./","title":"introduction","keywords":"","body":"My Awesome Book Introduction This file file serves as your book's preface, a great place to describe your book's content and ideas. Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-11 19:59:54 "},"Android/":{"url":"Android/","title":"Android","keywords":"","body":"Andorid目录 Android基础 Android JNI Android 反编译 Android BLE View Other 框架 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-10-08 13:32:27 "},"Android/Android基础/":{"url":"Android/Android基础/","title":"Android基础","keywords":"","body":"Android Advanced 目录 Android 6.0动态权限获取 Android 后台任务 Android 文件操作 getSystemService的使用 Handler Looper介绍 异步操作Asynctask Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Android/Android JNI/":{"url":"Android/Android JNI/","title":"Android JNI","keywords":"","body":"Android Advanced 目录 Android Studio JNI引入 Android JNI敏感信息保护 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 17:01:17 "},"Android/Android反编译/":{"url":"Android/Android反编译/","title":"Android 反编译","keywords":"","body":"Android反编译目录 Android应用防止二次打包 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 17:01:17 "},"Android/Ble/":{"url":"Android/Ble/","title":"Android BLE","keywords":"","body":"Android BLE目录 Android ble 4.0 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Android/View/":{"url":"Android/View/","title":"View","keywords":"","body":"View目录 ActionBar和ToolBar的使用 CountDownView LayoutInflater的使用 Materials Design Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Android/Other/":{"url":"Android/Other/","title":"Other","keywords":"","body":"其他 Groovy介绍 Module的.gradle配置 常用操作 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Android/框架/":{"url":"Android/框架/","title":"框架","keywords":"","body":"框架目录 AAC Android Architecture Components DataBinding的使用 LifeCycle和Room的使用 Dagger2 FastJson的使用 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Java/":{"url":"Java/","title":"Java","keywords":"","body":"Java目录 Java基础 Java多线程 Java虚拟机 Java设计模式 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Java/Java基础/":{"url":"Java/Java基础/","title":"Java基础","keywords":"","body":"Java基础目录 Java输入输出操作 Java关键字 Java泛型 Java集合 Java Lambda表达式 String、StringBuffer、StringBuilder的区别 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Java/Java多线程/":{"url":"Java/Java多线程/","title":"Java多线程","keywords":"","body":"Java多线程目录 Java多线程与单例模式 Java多线程基础 Java多线程间通信 Java锁机制 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Java/设计模式/":{"url":"Java/设计模式/","title":"Java设计模式","keywords":"","body":"Java设计模式目录 观察者模式 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-30 16:28:42 "},"Other/Git/Git.html":{"url":"Other/Git/Git.html","title":"Git","keywords":"","body":"常用Git操作 一、将本地已有仓库推送到远程仓库 1、将本地仓库与远程仓库建立关联 git remote add github git@github.com:Lucius/GitTest.git 查看本地仓库与远程仓库关联情况 git remote -v 删除与远程仓库关联 git remote rm origin 2、设置用户名和密码 git config -global user.name \"\" git config -global user.email \"\" 3、设置SSH Key, 生成SSH Keyssh-keygen -t rsa -C \"your_email@example.com\" -t 指定密钥类型，默认是 rsa ，可以省略。 -C 设置注释文字，比如邮箱。 -f 指定密钥文件存储文件名。 在GitHub中设置SSH，即将.ssh.id_rsa.pub中的内容添加到Key中 4、建立本地到上游（远端）仓的链接，建立链接后代码才能提交上去git branch --set-upstream-to=origin 当本地仓库与远程仓库没有相同的commit时，git不允许提交会出现fatal: refusing to merge unrelated histories错误，需要使用下面命令：git pull origin master --allow-unrelated-histories 5、将本地仓库推送至远端git push -u origin master 如果出现Permission denied(publickey)，则说明第3步中的公钥配置错误 推送正常 二、将本地分支提交到远程 1、建立本地到上游（远端）仓的链接 git branch --set-upstream-to=origin 2、拉取远程分支内容 git pull --allow-unrelated-histories 3、将本地分支推送至远程git push origin EditBranch 三、合并多次提交 git rebase -i HEAD~3 如果在合并的过程中出现冲突需要先解决冲突，再进行合并 git rebase --continue 如果放弃本次合并，使用 git rebase --abort 四、Git多用户进行管理 需要为每一个仓库设置user、email 第一步：取消git的global用户以及邮箱 git config --global --unset user.name git config --global --unset user.email 第二步：在不同的仓库中配置不同的user、email,然后就可以愉快地使用了,第一次为仓库添加user、email在push的时候需要输入密码进行验证。 git config user.email \"xxxx@xx.com\" git config user.name \"xxxx\" 五、git reset --hard --soft与git revert git reset --hard HEAD~1修改版本库、修改暂存区、修改工作区；将版本库回退一个版本，但是不仅仅将本地版本库的头指针全部重置到指定版本，也会重置暂存区，并将工作代码也回退到这个版本。 git reset --soft HEAD~1修改版本库、保留暂存区、保留工作区；将版本库回退一个版本，且将这次提交之后的所有变更都移动到暂存区。 git revert与git reset区别 git reset指向原地或者向前移动指针,直接删除commit，git revert创建一个逆向commit来覆盖之前commit,指针向后移动。 在后续合并旧版本时，git revert的部分不再出现；而git reset在合并旧版本时，这些被回滚的提交还会再次被引入。 撤销 git reset git reflog 查看操作历史，找到之前 HEAD 的 hash 值，然后 git reset --hard 到那个 hash 即可 六、git cherry-pick使用方法 将某一个分支的提交，引入到当前分支的提交上，即合并某一分支的部分提交。 git cherry-pick :单独合并一个提交 git cherry-pick -x ：同上，不同点：保留原提交者信息。 git cherry-pick ..：(左开右闭，不包含start-commit-id)的提交cherry-pick到当前分支 七、修改git urls的路径方式 将urls由SSH模式修改为Https模式 将usrls由Https模式修改为SSH模式 Copyright © LuciusCS 2019 all right reserved，powered by Gitbook文件修订时间： 2019-09-21 08:52:10 "}}